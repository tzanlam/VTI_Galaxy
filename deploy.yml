name: CI/CD Fullstack Deployment

on:
  push:
    branches: [webapp]

concurrency:
  group: fullstack-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'VTI_Galaxy_BE/**'
            frontend:
              - 'VTI_Galaxy_FE/**'

  backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    env:
      IMAGE_BACKEND: ${{ secrets.DOCKERHUB_USERNAME }}/vti_backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./VTI_Galaxy_BE
          file: ./VTI_Galaxy_BE/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}

      - name: Trigger Render deploy
        run: |
          curl -sS -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json"

  frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./VTI_Galaxy_FE
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: VTI_Galaxy_FE/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@v2.2.0
        with:
          args: deploy --only hosting --config ./VTI_Galaxy_FE/firebase.json
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
